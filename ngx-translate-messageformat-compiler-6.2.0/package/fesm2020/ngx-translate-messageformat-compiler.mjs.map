{"version":3,"file":"ngx-translate-messageformat-compiler.mjs","sources":["../../src/lib/message-format-config.ts","../../src/lib/translate-message-format-compiler.ts","../../src/lib/translate-message-format-debug-compiler.ts","../../src/public-api.ts","../../src/ngx-translate-messageformat-compiler.ts"],"sourcesContent":["import { InjectionToken } from \"@angular/core\";\nimport { CustomFormatter } from \"@messageformat/core\";\n\nexport const MESSAGE_FORMAT_CONFIG = new InjectionToken<MessageFormatConfig>(\n  \"MESSAGE_FORMAT_CONFIG\"\n);\n\nexport interface MessageFormatConfig {\n  biDiSupport?: boolean;\n  formatters?: {\n    [key: string]: CustomFormatter;\n  };\n  strictNumberSign?: boolean;\n  currency?: string;\n}\n\nexport const defaultConfig: MessageFormatConfig = {\n  biDiSupport: false,\n  formatters: {},\n  strictNumberSign: false,\n  currency: \"USD\",\n};\n","import { Inject, Injectable, Optional } from \"@angular/core\";\nimport { TranslateCompiler } from \"@ngx-translate/core\";\nimport MessageFormat, { MessageFormatOptions } from \"@messageformat/core\";\nimport {\n  defaultConfig,\n  MessageFormatConfig,\n  MESSAGE_FORMAT_CONFIG,\n} from \"./message-format-config\";\n\n/**\n * This compiler expects ICU syntax and compiles the expressions with messageformat.js\n */\n@Injectable()\nexport class TranslateMessageFormatCompiler extends TranslateCompiler {\n  private mfCache = new Map<string, MessageFormat>();\n  private config: MessageFormatOptions<\"string\">;\n\n  constructor(\n    @Optional()\n    @Inject(MESSAGE_FORMAT_CONFIG)\n    config?: MessageFormatConfig\n  ) {\n    super();\n\n    const {\n      formatters: customFormatters,\n      biDiSupport,\n      strictNumberSign: strict,\n      currency,\n    } = {\n      ...defaultConfig,\n      ...config,\n    };\n\n    this.config = { customFormatters, biDiSupport, strict, currency };\n  }\n\n  public compile(value: string, lang: string): (params: any) => string {\n    return this.getMessageFormatInstance(lang).compile(value);\n  }\n\n  public compileTranslations(translations: any, lang: string): any {\n    if (typeof translations === \"string\") {\n      return this.compile(translations, lang);\n    }\n\n    return Object.keys(translations).reduce<{ [key: string]: any }>(\n      (acc, key) => {\n        const value = translations[key];\n        return { ...acc, [key]: this.compileTranslations(value, lang) };\n      },\n      {}\n    );\n  }\n\n  private getMessageFormatInstance(locale: string): MessageFormat {\n    if (!this.mfCache.has(locale)) {\n      this.mfCache.set(\n        locale,\n        new MessageFormat<\"string\">(locale, this.config)\n      );\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return this.mfCache.get(locale)!;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { TranslateMessageFormatCompiler } from \"./translate-message-format-compiler\";\n\n/* eslint-disable-next-line  no-console */\nconst log = (...message: string[]) => console.log(tag, ...message);\nconst tag = \"[TranslateMessageFormatCompiler]\";\n\n@Injectable()\nexport class TranslateMessageFormatDebugCompiler extends TranslateMessageFormatCompiler {\n  public compile(value: string, lang: string): (params: any) => string {\n    log(`COMPILE (${lang})`, value);\n    const interpolationFn = super.compile(value, lang);\n\n    return this.wrap(interpolationFn, value);\n  }\n\n  public compileTranslations(value: any, lang: string): any {\n    log(`COMPILE (${lang})`, value);\n    return super.compileTranslations(value, lang);\n  }\n\n  private wrap(\n    fn: (params: any) => string,\n    reference: string\n  ): (params: any) => string {\n    return (params: any) => {\n      log(\"INTERPOLATE\", reference, params);\n      return fn(params);\n    };\n  }\n}\n","/*\n * Public API Surface of ngx-translate-messageformat-compiler\n */\n\nexport * from \"./lib/message-format-config\";\nexport * from \"./lib/translate-message-format-compiler\";\nexport * from \"./lib/translate-message-format-debug-compiler\";\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;MAGa,qBAAqB,GAAG,IAAI,cAAc,CACrD,uBAAuB,EACvB;AAWW,MAAA,aAAa,GAAwB;AAChD,IAAA,WAAW,EAAE,KAAK;AAClB,IAAA,UAAU,EAAE,EAAE;AACd,IAAA,gBAAgB,EAAE,KAAK;AACvB,IAAA,QAAQ,EAAE,KAAK;;;ACXjB;;AAEG;AAEG,MAAO,8BAA+B,SAAQ,iBAAiB,CAAA;AAInE,IAAA,WAAA,CAGE,MAA4B,EAAA;AAE5B,QAAA,KAAK,EAAE,CAAC;AARF,QAAA,IAAA,CAAA,OAAO,GAAG,IAAI,GAAG,EAAyB,CAAC;AAUjD,QAAA,MAAM,EACJ,UAAU,EAAE,gBAAgB,EAC5B,WAAW,EACX,gBAAgB,EAAE,MAAM,EACxB,QAAQ,GACT,GAAG;AACF,YAAA,GAAG,aAAa;AAChB,YAAA,GAAG,MAAM;SACV,CAAC;AAEF,QAAA,IAAI,CAAC,MAAM,GAAG,EAAE,gBAAgB,EAAE,WAAW,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC;KACnE;IAEM,OAAO,CAAC,KAAa,EAAE,IAAY,EAAA;QACxC,OAAO,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;KAC3D;IAEM,mBAAmB,CAAC,YAAiB,EAAE,IAAY,EAAA;AACxD,QAAA,IAAI,OAAO,YAAY,KAAK,QAAQ,EAAE;YACpC,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;AACzC,SAAA;AAED,QAAA,OAAO,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,MAAM,CACrC,CAAC,GAAG,EAAE,GAAG,KAAI;AACX,YAAA,MAAM,KAAK,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC;AAChC,YAAA,OAAO,EAAE,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC;SACjE,EACD,EAAE,CACH,CAAC;KACH;AAEO,IAAA,wBAAwB,CAAC,MAAc,EAAA;QAC7C,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;AAC7B,YAAA,IAAI,CAAC,OAAO,CAAC,GAAG,CACd,MAAM,EACN,IAAI,aAAa,CAAW,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CACjD,CAAC;AACH,SAAA;;QAGD,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAE,CAAC;KAClC;;AApDU,8BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,8BAA8B,kBAM/B,qBAAqB,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;+HANpB,8BAA8B,EAAA,CAAA,CAAA;2FAA9B,8BAA8B,EAAA,UAAA,EAAA,CAAA;kBAD1C,UAAU;;0BAMN,QAAQ;;0BACR,MAAM;2BAAC,qBAAqB,CAAA;;;AChBjC;AACA,MAAM,GAAG,GAAG,CAAC,GAAG,OAAiB,KAAK,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,OAAO,CAAC,CAAC;AACnE,MAAM,GAAG,GAAG,kCAAkC,CAAC;AAGzC,MAAO,mCAAoC,SAAQ,8BAA8B,CAAA;IAC9E,OAAO,CAAC,KAAa,EAAE,IAAY,EAAA;AACxC,QAAA,GAAG,CAAC,CAAY,SAAA,EAAA,IAAI,GAAG,EAAE,KAAK,CAAC,CAAC;QAChC,MAAM,eAAe,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QAEnD,OAAO,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;KAC1C;IAEM,mBAAmB,CAAC,KAAU,EAAE,IAAY,EAAA;AACjD,QAAA,GAAG,CAAC,CAAY,SAAA,EAAA,IAAI,GAAG,EAAE,KAAK,CAAC,CAAC;QAChC,OAAO,KAAK,CAAC,mBAAmB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;KAC/C;IAEO,IAAI,CACV,EAA2B,EAC3B,SAAiB,EAAA;QAEjB,OAAO,CAAC,MAAW,KAAI;AACrB,YAAA,GAAG,CAAC,aAAa,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;AACtC,YAAA,OAAO,EAAE,CAAC,MAAM,CAAC,CAAC;AACpB,SAAC,CAAC;KACH;;gIArBU,mCAAmC,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;oIAAnC,mCAAmC,EAAA,CAAA,CAAA;2FAAnC,mCAAmC,EAAA,UAAA,EAAA,CAAA;kBAD/C,UAAU;;;ACPX;;AAEG;;ACFH;;AAEG;;;;"}